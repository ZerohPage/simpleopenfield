name: Deploy to GitHub Pages

on:
  # Trigger deployment on tag push
  push:
    tags:
      - 'v*'
  
  # Allow manual trigger from Actions tab
  workflow_dispatch:

# Set permissions for the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create build directory
        run: mkdir -p build
        
      - name: Copy static files
        run: |
          cp index.html build/
          cp -r styles build/
          cp -r js build/
          cp README.md build/
          
      - name: Optimize CSS (optional minification)
        run: |
          # Simple CSS minification - remove comments and extra whitespace
          find build/styles -name "*.css" -exec sed -i 's|/\*.*\*/||g' {} \;
          find build/styles -name "*.css" -exec sed -i 's/[[:space:]]\+/ /g' {} \;
          
      - name: Optimize JavaScript (optional minification)
        run: |
          # Simple JS minification - remove console.log statements and comments
          find build/js -name "*.js" -exec sed -i '/console\.log/d' {} \;
          find build/js -name "*.js" -exec sed -i 's|//.*$||g' {} \;
          
      - name: Add deployment info
        run: |
          echo "<!-- Deployed via GitHub Actions on $(date) -->" >> build/index.html
          echo "<!-- Tag: ${{ github.ref_name }} -->" >> build/index.html
          echo "<!-- Commit: ${{ github.sha }} -->" >> build/index.html
          
      - name: Validate HTML
        run: |
          # Basic HTML validation - check for required elements
          if ! grep -q "<title>" build/index.html; then
            echo "Error: Missing title tag"
            exit 1
          fi
          if ! grep -q "<meta.*viewport" build/index.html; then
            echo "Error: Missing viewport meta tag"
            exit 1
          fi
          echo "HTML validation passed"
          
      - name: Check file structure
        run: |
          echo "Build directory contents:"
          find build -type f -name "*.html" -o -name "*.css" -o -name "*.js" | sort
          
          # Verify required files exist
          required_files=(
            "build/index.html"
            "build/styles/main.css"
            "build/styles/components.css"
            "build/styles/responsive.css"
            "build/js/app.js"
            "build/js/data.js"
            "build/js/ui.js"
            "build/js/utils.js"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: Required file $file is missing"
              exit 1
            fi
          done
          echo "All required files present"
          
      - name: Generate sitemap
        run: |
          cat > build/sitemap.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://zerohpage.github.io/simpleopenfield/</loc>
              <lastmod>$(date -u +%Y-%m-%d)</lastmod>
              <changefreq>monthly</changefreq>
              <priority>1.0</priority>
            </url>
          </urlset>
          EOF
          
      - name: Generate robots.txt
        run: |
          cat > build/robots.txt << EOF
          User-agent: *
          Allow: /
          
          Sitemap: https://zerohpage.github.io/simpleopenfield/sitemap.xml
          EOF
          
      - name: Add manifest.json for PWA
        run: |
          cat > build/manifest.json << EOF
          {
            "name": "SimpleOpenField",
            "short_name": "SOF",
            "description": "Field Service Management Application",
            "start_url": "/simpleopenfield/",
            "display": "standalone",
            "background_color": "#ffffff",
            "theme_color": "#2563eb",
            "icons": [
              {
                "src": "data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><circle cx='50' cy='50' r='40' fill='%232563eb'/><text x='50' y='60' text-anchor='middle' fill='white' font-size='40' font-family='Arial'>S</text></svg>",
                "sizes": "192x192",
                "type": "image/svg+xml"
              }
            ]
          }
          EOF
          
      - name: Update HTML with PWA manifest
        run: |
          sed -i 's|</head>|  <link rel="manifest" href="manifest.json">\n  <meta name="theme-color" content="#2563eb">\n</head>|' build/index.html
          
      - name: Create 404.html
        run: |
          cat > build/404.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Page Not Found - SimpleOpenField</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      height: 100vh;
                      margin: 0;
                      background: #f8fafc;
                      color: #334155;
                  }
                  .container {
                      text-align: center;
                      max-width: 400px;
                      padding: 2rem;
                  }
                  h1 { color: #2563eb; font-size: 3rem; margin-bottom: 1rem; }
                  p { margin-bottom: 2rem; line-height: 1.6; }
                  a {
                      display: inline-block;
                      padding: 0.75rem 1.5rem;
                      background: #2563eb;
                      color: white;
                      text-decoration: none;
                      border-radius: 0.5rem;
                      transition: background 0.2s;
                  }
                  a:hover { background: #1d4ed8; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>404</h1>
                  <p>The page you're looking for doesn't exist.</p>
                  <a href="/simpleopenfield/">Return to SimpleOpenField</a>
              </div>
              <script>
                  // Redirect to main app for SPA routes
                  if (window.location.pathname.startsWith('/simpleopenfield/')) {
                      window.location.href = '/simpleopenfield/';
                  }
              </script>
          </body>
          </html>
          EOF
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Create deployment summary
        run: |
          echo "## üöÄ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed at:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Features Deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Field Service Management SPA" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Job Management System" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Customer & Technician Management" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Schedule Calendar" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Reports Dashboard" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Responsive Design" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ PWA Support" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üéâ Your SimpleOpenField application is now live!"

  # Notification job (optional)
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Report deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üåê Live URL: https://zerohpage.github.io/simpleopenfield/"
            echo "üì¶ Tag: ${{ github.ref_name }}"
          else
            echo "‚ùå Deployment failed!"
            echo "Please check the workflow logs for details."
            exit 1
          fi
